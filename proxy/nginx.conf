server {
    listen 80;
    server_name localhost;

    # API Gateway - Enrutamiento al microservicio frontend
    location / {
        proxy_pass http://frontend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
        proxy_connect_timeout 60s;
        proxy_buffers 8 16k;
        proxy_buffer_size 32k;

        # WebSocket support para desarrollo con Vite
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # API Gateway - Enrutamiento al microservicio backend
    location /api/ {
        rewrite ^/api/(.*) /$1 break;
        proxy_pass http://backend:3003;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
        proxy_connect_timeout 60s;
        proxy_buffers 8 16k;
        proxy_buffer_size 32k;

        # Habilitar CORS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Endpoint de healthcheck para el API Gateway
    location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "OK";
    }

    # Archivos est√°ticos
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        proxy_pass http://frontend:3000;
        expires max;
        add_header Cache-Control "public, max-age=31536000";
    }
}