version: '3.8'

services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - PORT=8080
      - VITE_BACKEND_URL=http://backend:3003
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  backend:
    build: ./backend
    ports:
      - "3003:3003"
    environment:
      - DATABASE_URL=postgresql://apiuser:apipass@postgres:5432/miappdb?schema=public
      - NODE_ENV=development
      - PORT=3003
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=apiuser
      - POSTGRES_PASSWORD=apipass
      - POSTGRES_DB=miappdb
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    command: ["./start.sh"]

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: apiuser
      POSTGRES_PASSWORD: apipass
      POSTGRES_DB: miappdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U apiuser -d miappdb"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
