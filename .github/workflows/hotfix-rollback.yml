name: Hotfix & Rollback

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Acción a realizar'
        required: true
        type: choice
        options:
        - hotfix
        - rollback
      service:
        description: 'Servicio afectado'
        required: true
        type: choice
        options:
        - frontend
        - backend
        - both
      environment:
        description: 'Entorno objetivo'
        required: true
        type: choice
        options:
        - staging
        - production
      version:
        description: 'Versión para rollback (ej: v123) o rama para hotfix'
        required: false
        type: string

env:
  AZURE_REGISTRY: paqueteturisiticoscontainer.azurecr.io
  FRONTEND_IMAGE_NAME: mi-arquetipo-santi/frontend
  BACKEND_IMAGE_NAME: mi-arquetipo-santi/backend

jobs:
  validate-inputs:
    runs-on: ubuntu-latest
    outputs:
      should-continue: ${{ steps.validate.outputs.continue }}
    steps:
      - name: Validar inputs
        id: validate
        run: |
          if [[ "${{ github.event.inputs.action }}" == "rollback" && -z "${{ github.event.inputs.version }}" ]]; then
            echo "❌ Error: Debe especificar una versión para hacer rollback"
            exit 1
          fi
          if [[ "${{ github.event.inputs.action }}" == "hotfix" && -z "${{ github.event.inputs.version }}" ]]; then
            echo "⚠️ Advertencia: No se especificó rama, usando main"
            echo "version=main" >> $GITHUB_OUTPUT
          else
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          fi
          echo "continue=true" >> $GITHUB_OUTPUT

  hotfix:
    runs-on: ubuntu-latest
    needs: validate-inputs
    if: github.event.inputs.action == 'hotfix'
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.version || 'main' }}
          
      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login a Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_REGISTRY }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
          
      - name: Construir y desplegar Backend (Hotfix)
        if: github.event.inputs.service == 'backend' || github.event.inputs.service == 'both'
        run: |
          HOTFIX_TAG="${{ env.AZURE_REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:hotfix-${{ github.run_number }}"
          
          docker build -t $HOTFIX_TAG ./backend
          docker push $HOTFIX_TAG
          
          echo "Backend hotfix image: $HOTFIX_TAG" >> $GITHUB_STEP_SUMMARY
          
      - name: Construir y desplegar Frontend (Hotfix)
        if: github.event.inputs.service == 'frontend' || github.event.inputs.service == 'both'
        run: |
          HOTFIX_TAG="${{ env.AZURE_REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:hotfix-${{ github.run_number }}"
          
          docker build -t $HOTFIX_TAG ./frontend
          docker push $HOTFIX_TAG
          
          echo "Frontend hotfix image: $HOTFIX_TAG" >> $GITHUB_STEP_SUMMARY

  rollback:
    runs-on: ubuntu-latest
    needs: validate-inputs
    if: github.event.inputs.action == 'rollback'
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Login a Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_REGISTRY }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
          
      - name: Verificar imagen para rollback
        run: |
          if [[ "${{ github.event.inputs.service }}" == "backend" || "${{ github.event.inputs.service }}" == "both" ]]; then
            BACKEND_IMAGE="${{ env.AZURE_REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ github.event.inputs.version }}"
            if ! docker manifest inspect $BACKEND_IMAGE > /dev/null 2>&1; then
              echo "❌ Error: La imagen $BACKEND_IMAGE no existe"
              exit 1
            fi
            echo "✅ Imagen backend verificada: $BACKEND_IMAGE"
          fi
          
          if [[ "${{ github.event.inputs.service }}" == "frontend" || "${{ github.event.inputs.service }}" == "both" ]]; then
            FRONTEND_IMAGE="${{ env.AZURE_REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ github.event.inputs.version }}"
            if ! docker manifest inspect $FRONTEND_IMAGE > /dev/null 2>&1; then
              echo "❌ Error: La imagen $FRONTEND_IMAGE no existe"
              exit 1
            fi
            echo "✅ Imagen frontend verificada: $FRONTEND_IMAGE"
          fi
          
      - name: Rollback Backend
        if: github.event.inputs.service == 'backend' || github.event.inputs.service == 'both'
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'mi-arquetipo-backend'
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_BACKEND_PUBLISH_PROFILE }}
          images: ${{ env.AZURE_REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ github.event.inputs.version }}
          
      - name: Rollback Frontend
        if: github.event.inputs.service == 'frontend' || github.event.inputs.service == 'both'
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'mi-arquetipo-frontend'
          slot-name: 'production'  
          publish-profile: ${{ secrets.AZURE_FRONTEND_PUBLISH_PROFILE }}
          images: ${{ env.AZURE_REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ github.event.inputs.version }}
          
      - name: Notificar rollback completado
        run: |
          echo "## 🔄 Rollback Completado" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Detalles:" >> $GITHUB_STEP_SUMMARY
          echo "- **Servicio**: ${{ github.event.inputs.service }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Versión**: ${{ github.event.inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Entorno**: ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY 