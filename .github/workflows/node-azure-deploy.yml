name: Multi-Container Deploy to Azure Web App

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: your-app-name    # Nombre de tu Azure Web App
  CONTAINER_REGISTRY: paqueteturisiticoscontainer.azurecr.io  # URL de Azure Container Registry
  FRONTEND_IMAGE: santiprimerproyecto-frontend
  BACKEND_IMAGE: santiprimerproyecto-backend
  IMAGE_TAG: latest  # Tag para la imagen

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Log in to Azure Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.CONTAINER_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
        
    # Construir y subir imagen del frontend
    - name: Build and push frontend image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: ${{ env.CONTAINER_REGISTRY }}/${{ env.FRONTEND_IMAGE }}:${{ env.IMAGE_TAG }}
        
    # Construir y subir imagen del backend
    - name: Build and push backend image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: ${{ env.CONTAINER_REGISTRY }}/${{ env.BACKEND_IMAGE }}:${{ env.IMAGE_TAG }}
        
    # Crear docker-compose.yml para Azure
    - name: Preparar docker-compose para Azure
      run: |
        # Creamos un archivo docker-compose especÃ­fico para Azure
        cat > azure-docker-compose.yml << EOF
        version: '3'
        services:
          backend:
            image: ${CONTAINER_REGISTRY}/${BACKEND_IMAGE}:${IMAGE_TAG}
            ports:
              - "3000:3000"
              - "2222:2222"
            environment:
              - NODE_ENV=production
              - SSH_PASSWD=root:Docker!
              - WEBSITES_ENABLE_APP_SERVICE_STORAGE=true
              - WEBSITES_PORT=3000
              - PORT=3000
          
          frontend:
            image: ${CONTAINER_REGISTRY}/${FRONTEND_IMAGE}:${IMAGE_TAG}
            ports:
              - "80:80"
            environment:
              - BACKEND_URL=/api/
              - NODE_ENV=production
        EOF
        
        cat azure-docker-compose.yml
    
    # Desplegar a Azure Web App configurado para multicontenedor
    - name: Deploy to Azure Web App (Multi-Container)
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        configuration-file: azure-docker-compose.yml